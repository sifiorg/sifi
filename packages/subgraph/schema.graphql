type Token @entity(immutable: true) {
  id: ID! # address as hex
  address: Bytes! # address
  decimals: BigInt!
  name: String
  symbol: String
}

type Warp @entity(immutable: true) {
  id: ID!

  addedAt: BigInt!
  addedAtBlock: BigInt!
  addedAtTransaction: Bytes!

  from: Bytes! # address
  tokenIn: Token! # null if ETH
  tokenOut: Token! # address
  amountIn: BigInt!
  amountInDecimal: BigDecimal!
  amountOut: BigInt!
  amountOutDecimal: BigDecimal!

  amountInUsd: BigDecimal
  amountOutUsd: BigDecimal
}

type AllTimeStats @entity {
  id: ID! # constant, current
  modifiedAt: BigInt!
  modifiedAtBlock: BigInt!
  modifiedAtTransaction: Bytes!
  warpCount: BigInt!
  volumeUsd: BigDecimal!
  partnerFeesUsd: BigDecimal!
  protocolFeesUsd: BigDecimal!
}

type Partner @entity {
  id: ID! # address
  addedAt: BigInt!
  addedAtBlock: BigInt!
  addedAtTransaction: Bytes!

  modifiedAt: BigInt!
  modifiedAtBlock: BigInt!
  modifiedAtTransaction: Bytes!

  rewardedUsd: BigDecimal!
  withdrawnUsd: BigDecimal!

  tokens: [PartnerToken!]! @derivedFrom(field: "partner")
}

type PartnerToken @entity {
  id: Bytes! # partner address + token address
  addedAt: BigInt!
  addedAtBlock: BigInt!
  addedAtTransaction: Bytes!

  token: Token! # address
  partner: Partner! # address
  modifiedAt: BigInt!
  modifiedAtBlock: BigInt!
  modifiedAtTransaction: Bytes!

  balance: BigInt!
  balanceDecimal: BigDecimal!
  balanceUsd: BigDecimal

  rewarded: BigInt!
  rewardedDecimal: BigDecimal!
  rewardedUsd: BigDecimal

  withdrawn: BigInt!
  withdrawnDecimal: BigDecimal!
  withdrawnUsd: BigDecimal
}

type Fee @entity(immutable: true) {
  id: ID! # tx hash + event id
  addedAt: BigInt!
  addedAtBlock: BigInt!
  addedAtTransaction: Bytes!

  partnerToken: PartnerToken! # address
  # Redundant fields are added for querying
  partner: Partner! # address
  token: Token! # address
  amount: BigInt!
  amountDecimal: BigDecimal!
  amountUsd: BigDecimal
}

type Withdrawal @entity(immutable: true) {
  id: ID! # tx hash + event id
  addedAt: BigInt!
  addedAtBlock: BigInt!
  addedAtTransaction: Bytes!

  partnerToken: PartnerToken! # address
  # Redundant fields are added for querying
  partner: Partner! # address
  token: Token! # address
  amount: BigInt!
  amountDecimal: BigDecimal!
  amountUsd: BigDecimal
}
